// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIGetOut.Data;

namespace WebAPIGetOut.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPIGetOut.Domain.Empleado", b =>
                {
                    b.Property<int>("Id_Empl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Alta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom_Ape")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Empl");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Producto", b =>
                {
                    b.Property<int>("Id_Prod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("Lote")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pre_Uni")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id_Prod");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Recibo", b =>
                {
                    b.Property<int>("Id_Recibo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha_Emi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Cli")
                        .HasColumnType("int");

                    b.Property<int>("Id_Res")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaId_Res")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id_Recibo");

                    b.HasIndex("ReservaId_Res");

                    b.ToTable("Recibos");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.ReciboProducto", b =>
                {
                    b.Property<int>("Id_RecProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Producto")
                        .HasColumnType("int");

                    b.Property<int>("Id_Recibo")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId_Prod")
                        .HasColumnType("int");

                    b.Property<int?>("ReciboId_Recibo")
                        .HasColumnType("int");

                    b.HasKey("Id_RecProd");

                    b.HasIndex("ProductoId_Prod");

                    b.HasIndex("ReciboId_Recibo");

                    b.ToTable("ReciboProductos");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Reserva", b =>
                {
                    b.Property<int>("Id_Res")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Act")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Res")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nro_Par")
                        .HasColumnType("int");

                    b.Property<string>("Pago")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Res");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.ReservaEmpleado", b =>
                {
                    b.Property<int>("Id_ResEmp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmpleadoId_Empl")
                        .HasColumnType("int");

                    b.Property<int>("Id_Emp")
                        .HasColumnType("int");

                    b.Property<int>("Id_Res")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaId_Res")
                        .HasColumnType("int");

                    b.HasKey("Id_ResEmp");

                    b.HasIndex("EmpleadoId_Empl");

                    b.HasIndex("ReservaId_Res");

                    b.ToTable("ReservaEmpleados");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpleadoId_Empl")
                        .HasColumnType("int");

                    b.Property<int>("Id_Emp")
                        .HasColumnType("int");

                    b.Property<string>("Nom_Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("EmpleadoId_Empl");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Recibo", b =>
                {
                    b.HasOne("WebAPIGetOut.Domain.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId_Res");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.ReciboProducto", b =>
                {
                    b.HasOne("WebAPIGetOut.Domain.Producto", "Producto")
                        .WithMany("ReciboProductos")
                        .HasForeignKey("ProductoId_Prod");

                    b.HasOne("WebAPIGetOut.Domain.Recibo", "Recibo")
                        .WithMany("ReciboProductos")
                        .HasForeignKey("ReciboId_Recibo");

                    b.Navigation("Producto");

                    b.Navigation("Recibo");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.ReservaEmpleado", b =>
                {
                    b.HasOne("WebAPIGetOut.Domain.Empleado", "Empleado")
                        .WithMany("ReservaEmpleados")
                        .HasForeignKey("EmpleadoId_Empl");

                    b.HasOne("WebAPIGetOut.Domain.Reserva", "Reserva")
                        .WithMany("ReservaEmpleados")
                        .HasForeignKey("ReservaId_Res");

                    b.Navigation("Empleado");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Usuario", b =>
                {
                    b.HasOne("WebAPIGetOut.Domain.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId_Empl");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Empleado", b =>
                {
                    b.Navigation("ReservaEmpleados");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Producto", b =>
                {
                    b.Navigation("ReciboProductos");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Recibo", b =>
                {
                    b.Navigation("ReciboProductos");
                });

            modelBuilder.Entity("WebAPIGetOut.Domain.Reserva", b =>
                {
                    b.Navigation("ReservaEmpleados");
                });
#pragma warning restore 612, 618
        }
    }
}
